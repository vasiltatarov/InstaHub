@model MyForum.Web.ViewModels.Chat.UserMessages
@{ this.ViewBag.Title = "Chat"; }

<!DOCTYPE html>
<html class=''>
<head>
    <meta charset='UTF-8'>

    <link rel="stylesheet" href="~/css/chat.css" />
</head>
<body>
    <div class="container">
        <h3 class=" text-center">Messaging</h3>
        <div class="messaging">
            <div class="inbox_msg">
                <div class="inbox_people">
                    <div class="headind_srch">
                        <div class="recent_heading">
                            <h4>Last Active</h4>
                        </div>
                        <div class="srch_bar">
                            <div class="stylish-input-group">
                                <input type="text" class="search-bar" placeholder="Search">
                                <span class="input-group-addon">
                                    <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="inbox_chat">
                        @foreach (var message in this.Model.Messages
                              .GroupBy(x => x.UserUserName)
                              .Select(x => x.Last())
                              .ToList()
                          )
                        {
                            <div class="chat_list">
                                <div class="chat_people">
                                    <div class="chat_img">
                                        <img class="rounded-circle" src="~/uploads/@message.UserImagePath" alt="sunil">
                                    </div>
                                    <div class="chat_ib">
                                        <h5>
                                            @message.UserUserName
                                            <span class="chat_date">
                                                <time datetime="@message.CreatedOn.ToString("O")"></time>
                                            </span>
                                        </h5>
                                        <p>@message.Text</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="mesgs">
                    <div id="messagesList" class="msg_history messages">
                        @foreach (var message in this.Model.Messages)
                        {
                            <br />
                            <div class="incoming_msg">
                                <div class="incoming_msg_img">
                                    <img class="rounded-circle" src="~/uploads/@message.UserImagePath" alt="" />
                                </div>
                                <div class="received_msg">
                                    <div class="received_withd_msg">
                                        <p>@message.Text</p>
                                        <span style="color: red">@message.UserUserName</span>:
                                        <time datetime="@message.CreatedOn.ToString("O")"></time>
                                    </div>
                                </div>
                            </div>
                        }
                        @*<div class="outgoing_msg">
                                <div class="incoming_msg_img">
                                    <img class="rounded-circle" src="~/uploads" alt="sunil">
                                </div>
                                <div class="sent_msg">
                                    <p>
                                        Test which is a new approach to have all
                                        solutions
                                    </p>
                                    <span class="time_date"> 11:01 AM | June 9</span>
                                </div>
                            </div>*@
                    </div>
                    <div class="type_msg">
                        <div id="message-holder" class="input_msg_write">
                            <input id="messageInput" type="text" class="write_msg" placeholder="Type a message" />
                            <button id="sendButton" class="msg_send_btn" type="button">
                                <i class="fa fa-paper-plane" aria-hidden="true"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script src='https://code.jquery.com/jquery-2.2.4.min.js'></script>
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
    <script src="~/lib/moment/min/moment-with-locales.min.js"></script>

    @section Scripts {
        <script>
            var connection =
                new signalR.HubConnectionBuilder()
                    .withUrl("/chat")
                    .build();

            connection.on("NewMessage",
                function (message) {
                    if (message.text.trim() !== '') {
                        var chatInfo = `
<br />
<div class="incoming_msg">
<div class="incoming_msg_img">
    <img class="rounded-circle" src="/uploads/${message.userImagePath}" alt="" />
</div>
<div class="received_msg">
    <div class="received_withd_msg">
        <p>${message.text}</p>
       <span style="color: red">${message.userUserName}</span>:${moment().format('llll')}
    </div>
</div>
</div>`;
                        $("#messagesList").append(chatInfo);
                        $(".messages").animate({ scrollTop: "99999" }, "fast");
                    }
                });

            $("#sendButton").click(function () {
                var message = $("#messageInput").val();
                connection.invoke("Send", message);
                $("#messageInput").val("");
            });

            connection.start().catch(function (err) {
                return console.error(err.toString());
            });

            function escapeHtml(unsafe) {
                return unsafe
                    .replace(/&/g, "&amp;")
                    .replace(/</g, "&lt;")
                    .replace(/>/g, "&gt;")
                    .replace(/"/g, "&quot;")
                    .replace(/'/g, "&#039;");
            }


            //Aplication logic HERE

            $(".messages").animate({ scrollTop: "99999" }, "fast");

            $("#profile-img").click(function () {
                $("#status-options").toggleClass("active");
            });

            $(".expand-button").click(function () {
                $("#profile").toggleClass("expanded");
                $("#contacts").toggleClass("expanded");
            });

            $("#status-options ul li").click(function () {
                $("#profile-img").removeClass();
                $("#status-online").removeClass("active");
                $("#status-away").removeClass("active");
                $("#status-busy").removeClass("active");
                $("#status-offline").removeClass("active");
                $(this).addClass("active");

                if ($("#status-online").hasClass("active")) {
                    $("#profile-img").addClass("online");
                } else if ($("#status-away").hasClass("active")) {
                    $("#profile-img").addClass("away");
                } else if ($("#status-busy").hasClass("active")) {
                    $("#profile-img").addClass("busy");
                } else if ($("#status-offline").hasClass("active")) {
                    $("#profile-img").addClass("offline");
                } else {
                    $("#profile-img").removeClass();
                };

                $("#status-options").removeClass("active");
            });

            function newMessage() {
                message = $(".message-input input").val();
                if ($.trim(message) == '') {
                    return false;
                }
                $('<li class="sent"><img src="http://emilcarlsson.se/assets/mikeross.png" alt="" /><p>' + message + '</p></li>').appendTo($('.messages ul'));
                $('.message-input input').val(null);
                $('.contact.active .preview').html('<span>You: </span>' + message);
                $(".messages").animate({ scrollTop: $(document).height() }, "fast");
            };

            $('.submit').click(function () {
                newMessage();
            });

            $(window).on('keydown',
                function (e) {
                    if (e.which == 13) {
                        newMessage();
                        return false;
                    }
                });
        </script>
    }

</body>
</html>