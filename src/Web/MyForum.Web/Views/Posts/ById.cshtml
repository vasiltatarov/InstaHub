@model MyForum.Web.ViewModels.Posts.PostViewModel
@{
    this.ViewData["Title"] = this.Model.Title;

    async Task DisplayComments(int? parentId)
    {
        var comments = this.Model.Comments
            .Where(x => x.ParentId == parentId)
            .OrderByDescending(x => x.CreatedOn);

        if (!comments.Any())
        {
            return;
        }

        foreach (var comment in comments)
        {
            <div class="card mb-2">
                <div class="card-header">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img alt="" class="d-block ui-w-40 rounded-circle" src="~/uploads/@comment.UserImagePath" style="width: 80px; height: 70px;">
                        <div class="media-body ml-3">
                            <a asp-controller="ViewUserProfile" asp-action="ByUsername" asp-route-username="@comment.UserUserName" class="fas fa-user-edit" data-abc="true">@comment.UserUserName</a>
                            <div class="text-muted small">
                                <i class="fas fa-calendar-alt"></i>
                                <time datetime="@this.Model.CreatedOn.ToString("O")"></time>
                            </div>
                        </div>
                        @if (this.User.Identity.IsAuthenticated)
                        {
                            <button type="button" class="btn btn-secondary" onclick="showCommentForm(@comment.Id)">
                                <i class="ion ion-md-create"></i>&nbsp; Answer
                            </button>
                        }
                    </div>
                </div>
                <div class="card-body">
                    <p>
                        @Html.Raw(@comment.SanitizeContent)
                    </p>
                    @{ await DisplayComments(comment.Id); }
                </div>
            </div>
        }
    }
}

<div class="container-fluid mt-100">
    <h1>@this.Model.Title</h1>
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img alt="" class="d-block ui-w-40 rounded-circle" src="~/uploads/@Model.UserImagePath" style="width: 80px; height: 70px;">
                        <div class="media-body ml-3">
                            <a asp-controller="ViewUserProfile" asp-action="ByUsername" asp-route-username="@Model.UserUserName" class="fas fa-user-edit" data-abc="true">@this.Model.UserUserName</a>
                            <div class="text-muted small">
                                <i class="fas fa-calendar-alt"></i>
                                <time datetime="@this.Model.CreatedOn.ToString("O")"></time>
                            </div>
                        </div>
                        @if (this.User.Identity.IsAuthenticated)
                        {
                            <div class="text-muted small ml-3">
                                <form id="votesForm" method="post"></form>
                                <div>
                                    <a href="#" onclick="sendVote(@Model.Id, true)">
                                        <i class="fa fa-thumbs-up"></i>
                                    </a>
                                </div>
                                <div id="votesCount">@Model.VotesCount</div>
                                <div>
                                    <a href="#" onclick="sendVote(@Model.Id, false)">
                                        <i class="fa fa-thumbs-down"></i>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="card-body">
                    <p>
                        @Html.Raw(Model.SanitizedContent)
                    </p>
                </div>
                <div class="card-footer d-flex flex-wrap justify-content-between align-items-center px-0 pt-0 pb-3">
                    <div class="px-4 pt-3">
                        <a href="javascript:void(0)" class="text-muted d-inline-flex align-items-center align-middle" data-abc="true">
                            <i class="fa fa-heart text-danger"></i>&nbsp;
                            <span class="align-middle">@Model.VotesCount</span>
                        </a>
                        <span class="text-muted d-inline-flex align-items-center align-middle ml-4">
                            <i class="fa fa-eye text-muted fsize-3"></i>&nbsp;
                            <span class="align-middle">@Model.VisitorsCount</span>
                        </span>
                    </div>
                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <div class="px-4 pt-3">
                            <button type="button" class="btn btn-primary" onclick="showCommentForm(0)">
                                <i class="ion ion-md-create"></i>&nbsp; Comment
                            </button>
                        </div>
                    }
                </div>
            </div>
            <h2 class="text-center">Comments</h2>
            @{await DisplayComments(null);}
        </div>
    </div>
</div>

<script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        relative_urls: false,
        remove_script_host: false,
        convert_urls: true,
        plugins: [
            "image paste table link code media fullscreen wordcount searchreplace lists"
        ]
    });
</script>

<div>
    <form asp-controller="Comments" asp-action="Create" method="post" id="AddCommentForm" style="display: none">
        <input type="hidden" name="PostId" value="@this.Model.Id" />
        <input type="hidden" name="ParentId" value="0" />
        <div>
            <label for="Content"></label>
            <textarea name="Content" id="Content" class="form-control"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Add comment" />
        </div>
    </form>
</div>

@section Scripts {
    <script>
        function showCommentForm(parentId) {
            $("#AddCommentForm input[name='ParentId']").val(parentId);
            $("#AddCommentForm").toggle();
            $('html, body').animate({
                scrollTop: $("#AddCommentForm").offset().top
            }, 1000);
        }

        function sendVote(postId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { postId: postId, isUpVote: isUpVote };
            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#votesCount").html(data.votesCount);
                }
            });
        }
    </script>
}
